"use strict";(self.webpackChunknegotiator=self.webpackChunknegotiator||[]).push([[827],{18827:(e,t,n)=>{n.r(t),n.d(t,{Web3WalletProvider:()=>a,default:()=>c});var r=n(241),o=n(93951),i=function(e,t,n,r){return new(n||(n=Promise))((function(o,i){function s(e){try{c(r.next(e))}catch(e){i(e)}}function a(e){try{c(r.throw(e))}catch(e){i(e)}}function c(e){var t;e.done?o(e.value):(t=e.value,t instanceof n?t:new n((function(e){e(t)}))).then(s,a)}c((r=r.apply(e,t||[])).next())}))},s=function(e,t){var n,r,o,i,s={label:0,sent:function(){if(1&o[0])throw o[1];return o[1]},trys:[],ops:[]};return i={next:a(0),throw:a(1),return:a(2)},"function"==typeof Symbol&&(i[Symbol.iterator]=function(){return this}),i;function a(i){return function(a){return function(i){if(n)throw new TypeError("Generator is already executing.");for(;s;)try{if(n=1,r&&(o=2&i[0]?r.return:i[0]?r.throw||((o=r.return)&&o.call(r),0):r.next)&&!(o=o.call(r,i[1])).done)return o;switch(r=0,o&&(i=[2&i[0],o.value]),i[0]){case 0:case 1:o=i;break;case 4:return s.label++,{value:i[1],done:!1};case 5:s.label++,r=i[1],i=[0];continue;case 7:i=s.ops.pop(),s.trys.pop();continue;default:if(!(o=s.trys,(o=o.length>0&&o[o.length-1])||6!==i[0]&&2!==i[0])){s=0;continue}if(3===i[0]&&(!o||i[1]>o[0]&&i[1]<o[3])){s.label=i[1];break}if(6===i[0]&&s.label<o[1]){s.label=o[1],o=i;break}if(o&&s.label<o[2]){s.label=o[2],s.ops.push(i);break}o[2]&&s.ops.pop(),s.trys.pop();continue}i=t.call(e,s)}catch(e){i=[6,e],r=0}finally{n=o=0}if(5&i[0])throw i[1];return{value:i[0]?i[1]:void 0,done:!0}}([i,a])}}},a=function(){function e(e){this.state={addresses:[]},this.safeConnectOptions=e}return e.prototype.connectWith=function(e){return i(this,void 0,void 0,(function(){var t;return s(this,(function(n){switch(n.label){case 0:if(!e)throw new Error("Please provide a Wallet type to connect with.");return this[e]?[4,this[e]()]:[3,2];case 1:return t=n.sent(),(0,o.kg)(2,"address",t),[2,t];case 2:throw new Error("Wallet type not found")}}))}))},e.prototype.signWith=function(e,t){return i(this,void 0,void 0,(function(){var n;return s(this,(function(o){switch(o.label){case 0:return n=new r.Q(t),[4,n.getSigner().signMessage(e)];case 1:return[2,o.sent()]}}))}))},e.prototype.getConnectedWalletData=function(){return this.state.addresses},e.prototype.registerNewWalletAddress=function(e,t,n,r){return void 0===r&&(r="evm"),this.state.addresses.push({address:e,chainId:t,provider:n,blockChain:r}),this.state.addresses},e.prototype.getWeb3ChainId=function(e){return i(this,void 0,void 0,(function(){return s(this,(function(t){return[2,e.eth.getChainId()]}))}))},e.prototype.getWeb3Accounts=function(e){return i(this,void 0,void 0,(function(){return s(this,(function(t){return[2,e.eth.getAccounts()]}))}))},e.prototype.getWeb3ChainIdAndAccounts=function(e){return i(this,void 0,void 0,(function(){var t,n;return s(this,(function(r){switch(r.label){case 0:return[4,this.getWeb3ChainId(e)];case 1:return t=r.sent(),[4,this.getWeb3Accounts(e)];case 2:return n=r.sent(),[2,{chainId:t,accounts:n}]}}))}))},e.prototype.MetaMask=function(){return i(this,void 0,void 0,(function(){var e,t,n;return s(this,(function(r){switch(r.label){case 0:return(0,o.kg)(2,"connect MetaMask"),void 0===window.ethereum?[3,3]:[4,window.ethereum.request({method:"eth_requestAccounts"})];case 1:return e=r.sent(),[4,window.ethereum.request({method:"eth_chainId"})];case 2:return t=r.sent(),n=e[0],[2,this.registerNewWalletAddress(n,parseInt(t,16),ethereum)];case 3:throw new Error("MetaMask is not available. Please check the extension is supported and active.")}}))}))},e.prototype.WalletConnect=function(){return i(this,void 0,void 0,(function(){var e,t;return s(this,(function(i){switch(i.label){case 0:return(0,o.kg)(2,"connect Wallet Connect"),[4,Promise.all([n.e(380),n.e(363),n.e(392)]).then(n.bind(n,39623))];case 1:return[4,i.sent().getWalletConnectProviderInstance()];case 2:return[4,(e=i.sent()).enable()];case 3:return i.sent(),[4,new r.Q(e).listAccounts()];case 4:if(0===(t=i.sent()).length)throw new Error("No accounts found via wallet-connect.");return[2,this.registerNewWalletAddress(t[0],"1",e)]}}))}))},e.prototype.Torus=function(){return i(this,void 0,void 0,(function(){var e,t,o,i,a;return s(this,(function(s){switch(s.label){case 0:return[4,Promise.all([n.e(380),n.e(443),n.e(811)]).then(n.bind(n,75730))];case 1:return[4,s.sent().getTorusProviderInstance()];case 2:return[4,(e=s.sent()).init()];case 3:return s.sent(),[4,e.login()];case 4:return s.sent(),t=new r.Q(e.provider),[4,this.getWeb3ChainIdAndAccounts(t)];case 5:return o=s.sent(),i=o.accounts,a=o.chainId,[2,this.registerNewWalletAddress(i[0],a,e.provider)]}}))}))},e.prototype.Phantom=function(){return i(this,void 0,void 0,(function(){var e,t;return s(this,(function(n){switch(n.label){case 0:return(0,o.kg)(2,"connect Phantom"),void 0===window.solana?[3,2]:[4,window.solana.connect()];case 1:return e=n.sent(),t=e.publicKey.toBase58(),[2,this.registerNewWalletAddress(t,"mainnet-beta",window.solana,"solana")];case 2:throw new Error("MetaMask is not available. Please check the extension is supported and active.")}}))}))},e.prototype.SafeConnect=function(){return i(this,void 0,void 0,(function(){var e,t;return s(this,(function(n){switch(n.label){case 0:return(0,o.kg)(2,"connect SafeConnect"),[4,this.getSafeConnectProvider()];case 1:return[4,(e=n.sent()).initSafeConnect()];case 2:return t=n.sent(),console.log(t),this.registerNewWalletAddress(t,"1",e),[2,t]}}))}))},e.prototype.safeConnectAvailable=function(){return void 0!==this.safeConnectOptions},e.prototype.getSafeConnectProvider=function(){return i(this,void 0,void 0,(function(){return s(this,(function(e){switch(e.label){case 0:return[4,Promise.resolve().then(n.bind(n,67171))];case 1:return[2,new(0,e.sent().SafeConnectProvider)(this.safeConnectOptions)]}}))}))},e}();const c=a}}]);